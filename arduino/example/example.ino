/*

  beverly-crusher (build 82) [http://electronoob.com]

  Released under the terms of the MIT license.
  Copyright (c) 2014 electronoob.
  All rights reserved.

*/

#include <avr/pgmspace.h>

prog_uchar onebitraw[] PROGMEM = {
0XFF, 0XFF, 0XEF, 0XFF, 0XFB, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XAF, 0XFF, 0XDF, 0XFF, 
0XDE, 0XEF, 0XFF, 0XFF, 0XAF, 0XFF, 0XF1, 0X5F, 0XFA, 0XFF, 0XFD, 0X3F, 0XFF, 0XFF, 0XFF, 
0X63, 0XFF, 0XFF, 0X0F, 0XFF, 0XFF, 0XF7, 0XFE, 0XFF, 0XFE, 0X47, 0XFF, 0XFF, 0XFF, 0XFB, 
0XFF, 0XFC, 0X4F, 0XFF, 0XFB, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFC, 0X3F, 0XFF, 0XF7, 
0XFF, 0XE9, 0XFF, 0XC0, 0XFF, 0XFF, 0XE0, 0XFF, 0XFF, 0XC7, 0X7F, 0XE3, 0XFF, 0XB7, 0XFF, 
0XFF, 0X83, 0XFF, 0XFA, 0XFF, 0XFE, 0X5F, 0XFC, 0X27, 0XFF, 0XFE, 0X0F, 0XFF, 0XFF, 0XE1, 
0XFD, 0X7F, 0XFF, 0XAF, 0XFF, 0XF0, 0XFF, 0XFC, 0X3F, 0XFF, 0XF7, 0XFF, 0XFE, 0XFF, 0XFF, 
0XFF, 0X87, 0XFF, 0XFF, 0XF9, 0X7F, 0XFF, 0X87, 0XFF, 0XE0, 0XFF, 0XF4, 0XFF, 0XFF, 0XDB, 
0XFF, 0XFF, 0XFF, 0X3F, 0XF7, 0XFF, 0XC0, 0XFF, 0XFE, 0X1F, 0XFF, 0XC3, 0XFF, 0XED, 0XFF, 
0XFF, 0X87, 0XFF, 0XFB, 0XFE, 0X1F, 0XCF, 0XFF, 0XE1, 0XFF, 0XFE, 0X1F, 0XFF, 0XC3, 0XFD, 
0XFE, 0XFF, 0XFF, 0XC1, 0XFF, 0XFF, 0XFC, 0X3F, 0X87, 0XFF, 0XF0, 0XFF, 0XFF, 0X07, 0XFF, 
0X83, 0XFF, 0XD8, 0XFF, 0XFF, 0XC1, 0XFF, 0XFF, 0X3E, 0XBF, 0XC7, 0XFF, 0XC3, 0XFF, 0XFE, 
0X0F, 0XFF, 0XC7, 0XFF, 0X20, 0XFF, 0XFE, 0X07, 0XFF, 0XFF, 0XF3, 0XFE, 0X7F, 0XFF, 0X0F, 
0XFF, 0XF0, 0X7F, 0XEB, 0X7F, 0X8F, 0X87, 0XEF, 0XE1, 0XEF, 0XFF, 0X8C, 0XFF, 0XE7, 0XFE, 
0X3C, 0XFD, 0XFD, 0X1E, 0X7F, 0XE7, 0X87, 0XF9, 0XFF, 0XD5, 0XBD, 0XFF, 0XEF, 0X7E, 0XF3, 
0XFF, 0XBC, 0X7B, 0XFF, 0X8F, 0XFF, 0XF7, 0X87, 0XBF, 0XFF, 0XEE, 0X7F, 0XFF, 0X1E, 0XFD, 
0XF7, 0XFB, 0X7D, 0XFF, 0XFE, 0X1F, 0XFF, 0X9F, 0XBF, 0XF7, 0XFF, 0XF9, 0XFD, 0XFF, 0XFA, 
0XFF, 0XF7, 0XFF, 0XF3, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFB, 0XFF, 0XFF, 0X7F, 0XFF, 0XFF, 0XFF, 0XF0, 0XFF, 0XFF, 0XFF, 
0XEF, 0XFF, 0XFF, 0XFD, 0XFF, 0XFF, 0XF0, 0X1F, 0XFF, 0X87, 0XF1, 0XE3, 0XFF, 0XE4, 0X3F, 
0XC7, 0XC3, 0XE7, 0XE9, 0XFF, 0XE1, 0XF9, 0XFF, 0XE0, 0XFF, 0XFC, 0XFF, 0XE7, 0XCD, 0XFF, 
0X68, 0XFB, 0XFF, 0XFF, 0X3F, 0X7C, 0XFD, 0X8F, 0X8F, 0XFF, 0XA3, 0XFF, 0XFF, 0X7E, 0X7F, 
0XEF, 0XFF, 0XDF, 0XDF, 0XFF, 0X8B, 0XFF, 0XFF, 0XF2, 0X7E, 0X3F, 0XFC, 0X1F, 0XFF, 0XFE, 
0X37, 0XFF, 0XEF, 0XEC, 0XFC, 0X7F, 0XFE, 0X1F, 0XFF, 0XF3, 0X8F, 0XFB, 0XFF, 0XE1, 0XFF, 
0XFF, 0XFC, 0X3F, 0XFF, 0XDF, 0XDF, 0XE0, 0XFF, 0XF0, 0X7F, 0XFF, 0XC6, 0X7F, 0XFF, 0XFE, 
0XCF, 0XFF, 0XFF, 0XE0, 0XFF, 0XFC, 0XFF, 0XFF, 0X0F, 0XFE, 0X03, 0XFF, 0XFF, 0XF8, 0XFF, 
0XFF, 0XFC, 0X3F, 0XFF, 0XFC, 0X07, 0XFF, 0X0F, 0XFD, 0XFE, 0XFF, 0XF8, 0X0F, 0XFF, 0XFF, 
0XF1, 0XFF, 0XFF, 0XF8, 0X3F, 0XFF, 0XF8, 0X1F, 0XFF, 0X1F, 0XFF, 0X07, 0XFF, 0XF0, 0X3F, 
0XFF, 0XFF, 0XF8, 0X1F, 0XFF, 0XF0, 0X3F, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFC, 0X7F, 0XFF, 
0XF8, 0X3F, 0XFE, 0XFF, 0XFE, 0X0F, 0XFF, 0XE0, 0X3F, 0XFF, 0XFF, 0XEF, 0XFF, 0XFF, 0XC0, 
0XFF, 0XFF, 0XE0, 0X7F, 0XFE, 0X7F, 0XFF, 0XFF, 0XFF, 0XC0, 0XFF, 0XFE, 0XFF, 0XFF, 0XFF, 
0XFF, 0XE3, 0XFF, 0XFF, 0X80, 0XFF, 0XFC, 0X3F, 0XFF, 0XFF, 0XF8, 0X3F, 0XFF, 0XF8, 0X3F, 
0XFF, 0XE8, 0X3F, 0XF1, 0XFF, 0X97, 0XFF, 0XFF, 0X83, 0XFF, 0XFA, 0XBF, 0XFA, 0X3F, 0XA7, 
0XFA, 0X7F, 0XE0, 0XFF, 0XFF, 0X53, 0XFF, 0XEF, 0XF6, 0XFE, 0X7F, 0XF8, 0X5F, 0XEF, 0XE0, 
0X7F, 0XFF, 0X78, 0X7F, 0X0F, 0XE0, 0XFF, 0XFF, 0XF8, 0X3F, 0XFF, 0X1F, 0XFF, 0XF3, 0XFC, 
0X5F, 0XEB, 0XFF, 0X0F, 0XFF, 0XFC, 0X3F, 0XFE, 0XFF, 0XDF, 0XC3, 0XFF, 0XC1, 0XFF, 0XFF, 
0X03, 0XFF, 0XFF, 0XE1, 0XFC, 0X7F, 0XC0, 0XFF, 0XFF, 0XF0, 0XFF, 0XFF, 0X3F, 0XFF, 0X87, 
0XFC, 0X1F, 0XFF, 0XFE, 0X07, 0XFF, 0XFF, 0XFB, 0XFF, 0XFF, 0X81, 0XFF, 0XFF, 0XE0, 0XFF, 
0XFD, 0XBF, 0XFF, 0XFF, 0XFF, 0X7F, 0XFF, 0XFE, 0X0F, 0XFF, 0XFF, 0XEF, 0XFF, 0XFF, 0XCF, 
0XFF, 0XFF, 0XE0, 0X7F, 0XFF, 0XFC, 0X7F, 0XFF, 0XF8, 0X3F, 0XFF, 0XFC, 0X1F, 0XFF, 0XDF, 
0XFF, 0XFD, 0X7F, 0XD7, 0XFF, 0XFF, 0X81, 0XFF, 0XFF, 0XFF, 0X7F, 0XFF, 0XF8, 0X9F, 0XFF, 
0XF0, 0X7F, 0XFF, 0XFE, 0X1F, 0XFF, 0XFE, 0X37, 0XFF, 0XF8, 0X0F, 0XF9, 0XFF, 0XE3, 0XFE, 
0X3F, 0XE0, 0X7F, 0XFF, 0X83, 0XFF, 0XFF, 0XF8, 0XFF, 0XFF, 0XFC, 0X0F, 0XFF, 0XF8, 0X3F, 
0XFF, 0XFC, 0X1F, 0XF1, 0XFF, 0X01, 0XFF, 0XDF, 0XC7, 0XFF, 0X8F, 0XFF, 0XFC, 0X3F, 0XE0, 
0X3F, 0XFF, 0XE0, 0X3F, 0XFC, 0X7F, 0X87, 0XFF, 0XFC, 0X03, 0XFF, 0XFC, 0X07, 0XFF, 0X0F, 
0XF8, 0XFF, 0XFF, 0XF8, 0X3F, 0XFF, 0XC0, 0XFF, 0XC3, 0XFE, 0X0F, 0XFF, 0XFF, 0X01, 0XFF, 
0XF8, 0X0F, 0XFE, 0X7F, 0XC1, 0XFF, 0XFF, 0XE0, 0X3F, 0XFE, 0X0F, 0XFF, 0XE7, 0XFE, 0X3F, 
0XF7, 0XFE, 0X07, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XC3, 0XFF, 0XFF, 0XC0, 0XFF, 0XFF, 0XFD, 
0XFF, 0XFF, 0XFC, 0XFF, 0XFF, 0XFC, 0X0F, 0XF9, 0XFF, 0XFF, 0XFC, 0XFF, 0XCF, 0XFF, 0XFF, 
0X81, 0XFF, 0XBF, 0XF8, 0X7F, 0XDF, 0XFC, 0X7F, 0XFF, 0XF0, 0X3F, 0XFF, 0XFF, 0X9F, 0XFC, 
0X3F, 0XCF, 0XFF, 0XFF, 0X07, 0XFE, 0XFF, 0X83, 0XFF, 0X9F, 0XF0, 0XDF, 0XFF, 0XF0, 0XFF, 
0XFF, 0XF0, 0X7F, 0XE3, 0XFE, 0X3F, 0XFF, 0XF3, 0X1F, 0XFF, 0XFC, 0X1F, 0XFC, 0X7F, 0X9F, 
0XE7, 0XFF, 0X83, 0XFF, 0XFE, 0X0F, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XF1, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XE7, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XF1, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XC3, 0XFF, 0XE2, 0XFF, 0XFF, 0XFE, 0X07, 0XFF, 0XFF, 0XFC, 0X1F, 0XFF, 0XE0, 
0X0F, 0XFF, 0XFF, 0XC1, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0X3F, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFB, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XBF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0X1F, 0XFF, 0XFF, 0XFF, 0XFD, 0X07, 
0XFF, 0XE3, 0XFF, 0XFC, 0X7F, 0XFD, 0XFF, 0XFC, 0X0F, 0XFF, 0XA3, 0XFF, 0XC1, 0XFF, 0XF5, 
0X5F, 0XFC, 0XFF, 0XF8, 0X3F, 0XFC, 0X5F, 0XF8, 0X2B, 0XFF, 0X01, 0XFF, 0XE3, 0XFA, 0XFF, 
0XFF, 0X5D, 0X5F, 0XFF, 0XAB, 0XBF, 0X87, 0XFF, 0X17, 0XFF, 0XD2, 0X3F, 0XFF, 0XFE, 0X0F, 
0XFF, 0XFF, 0X47, 0XFF, 0XD7, 0XFF, 0XA3, 0XFF, 0X0A, 0XFF, 0XFE, 0X8F, 0XFF, 0XA5, 0XFF, 
0XF5, 0XFF, 0X8B, 0XFC, 0XBE, 0X5F, 0XFF, 0XCF, 0XFB, 0XEF, 0XFF, 0X53, 0XFF, 0XFC, 0X17, 
0XFF, 0XAB, 0XF7, 0XFB, 0XFF, 0X05, 0XFF, 0XAB, 0XFF, 0XFF, 0X5F, 0XE5, 0X7F, 0XFF, 0X80, 
0XFF, 0XF0, 0XFE, 0XFF, 0XFF, 0XD0, 0XFF, 0XFF, 0XFF, 0XD7, 0XE1, 0XFF, 0X25, 0XFF, 0XF8, 
0X2F, 0XFE, 0X3F, 0XC3, 0XFF, 0XFE, 0XA7, 0XFF, 0XF5, 0X7F, 0XFF, 0X0F, 0XF8, 0X2F, 0XFF, 
0XC2, 0XFF, 0XEF, 0XFE, 0X1F, 0XFF, 0XF9, 0X1F, 0XFD, 0X7F, 0XBF, 0XEB, 0XFF, 0X01, 0XFF, 
0XEB, 0XDD, 0X7F, 0XFF, 0XE9, 0X7F, 0XFF, 0X82, 0XFF, 0XE1, 0XFF, 0X0B, 0XFF, 0XFA, 0X1F, 
0XFF, 0XD6, 0XBF, 0XFF, 0XFF, 0X82, 0XFF, 0XD0, 0XBF, 0XFD, 0XAF, 0XE1, 0XFF, 0XFF, 0XE8, 
0X7F, 0XF8, 0XFF, 0XFF, 0XFF, 0XF0, 0XBF, 0XFF, 0XE5, 0X7F, 0XFD, 0X7F, 0XAB, 0XFF, 0XFD, 
0X4F, 0XFF, 0XFF, 0XF5, 0XFF, 0XFF, 0XF0, 0XFF, 0XFE, 0X0B, 0XFF, 0XC7, 0XFE, 0XAF, 0XFF, 
0X5C, 0X3F, 0XFF, 0XED, 0XFF, 0XFF, 0XFE, 0X0B, 0XFF, 0XD1, 0X7F, 0XFF, 0XFF, 0X97, 0XFF, 
0XFF, 0XE1, 0XFF, 0XF9, 0X7F, 0XFE, 0X7F, 0XF0, 0X1F, 0XFE, 0XE4, 0X7F, 0XF9, 0X7E, 0XFF, 
0X7F, 0XFF, 0X03, 0XFE, 0XB7, 0XFD, 0XFF, 0XFF, 0XF4, 0X7F, 0XFF, 0X81, 0XFF, 0XC3, 0XF8, 
0X1F, 0XFF, 0XAF, 0X5F, 0XFF, 0XFA, 0XFF, 0XF7, 0XFF, 0X81, 0XFF, 0XEA, 0XAF, 0XFF, 0XBF, 
0XE5, 0XFF, 0XFF, 0XE0, 0X7F, 0XEB, 0XFD, 0XFF, 0XFF, 0XFE, 0XAF, 0XFF, 0XE9, 0X7F, 0XF8, 
0XFF, 0X0F, 0XFF, 0XFE, 0X17, 0XFF, 0XF4, 0X3F, 0XFD, 0XFF, 0X97, 0XFF, 0XFF, 0XAF, 0XFF, 
0XFF, 0XAF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XDF, 0XFF, 0XF9, 0X7F, 0XF8, 0X3F, 0XFE, 0X0F, 0XFA, 0XE3, 0XFF, 0000, 0XFF, 
0XF0, 0X3F, 0XF9, 0XE3, 0XFF, 0XFC, 0X3F, 0XFF, 0X97, 0XFF, 0XE2, 0XFF, 0XFA, 0XBE, 0X3E, 
0XBF, 0XFA, 0X0F, 0XFE, 0XA3, 0XF6, 0XF4, 0XFD, 0XFC, 0X9D, 0XFF, 0XBF, 0XFF, 0X97, 0XF7, 
0XEB, 0XFF, 0X75, 0XFF, 0XE8, 0X7F, 0XEB, 0X7F, 0X75, 0X7A, 0XFF, 0XD6, 0XFF, 0X1F, 0XFE, 
0X2F, 0XFD, 0XEB, 0XEF, 0XE3, 0XFF, 0XCB, 0XDB, 0XFE, 0XFB, 0XFC, 0X5F, 0XFC, 0X3F, 0XFF, 
0XF9, 0XFF, 0XDF, 0XFF, 0X97, 0XFF, 0XFB, 0X9F, 0XFB, 0X7F, 0XDD, 0X7F, 0XFF, 0XA2, 0XFF, 
0XFF, 0XEB, 0XFF, 0XFF, 0XFC, 0XFF, 0XFF, 0XD5, 0X7F, 0XD7, 0XFE, 0X2B, 0XFF, 0XFC, 0X1F, 
0XFE, 0XFE, 0X5B, 0XFB, 0XFF, 0XE3, 0XFF, 0XFF, 0XED, 0XFF, 0XBF, 0XEA, 0XAF, 0XFF, 0XFE, 
0X1F, 0XFA, 0XFF, 0XDE, 0XFF, 0XFF, 0X0F, 0XFE, 0X7F, 0XFB, 0XF7, 0XFF, 0XF9, 0X5F, 0XFF, 
0XD1, 0X7F, 0XC7, 0XFF, 0X1F, 0XFF, 0XFC, 0X1F, 0XFF, 0X7F, 0XAF, 0XF5, 0X7F, 0XF0, 0X7F, 
0XFF, 0XDD, 0XFF, 0XDF, 0XFE, 0X9F, 0XFF, 0XFE, 0X1F, 0XF8, 0XFF, 0XEE, 0X3F, 0XFF, 0X47, 
0XFF, 0XFF, 0XA3, 0XFF, 0XFF, 0XFA, 0X3F, 0XFF, 0XCA, 0XFF, 0X87, 0XFE, 0X3E, 0XFF, 0XFE, 
0X2B, 0XFF, 0XEB, 0XDF, 0XF2, 0XFE, 0XAF, 0XFF, 0XFE, 0X8F, 0XFF, 0XBF, 0XFF, 0XFD, 0XFF, 
0XF0, 0XFF, 0XFE, 0XF1, 0XFF, 0X5F, 0XE0, 0XFF, 0XFF, 0XF1, 0X7F, 0XFA, 0XBF, 0XBF, 0XDF, 
0XFE, 0X1F, 0XFF, 0XF7, 0XE7, 0XFD, 0XFF, 0X95, 0XFF, 0XFF, 0X0B, 0XFF, 0X87, 0XFD, 0X7E, 
0XFF, 0XF0, 0XFF, 0XFF, 0XFC, 0X3F, 0XFF, 0XFD, 0X47, 0XFF, 0XF1, 0X7F, 0XFA, 0X7F, 0XC5, 
0XFF, 0XFF, 0XC3, 0XFF, 0XFF, 0XBB, 0XFC, 0XFF, 0XF0, 0X3F, 0XFF, 0XEE, 0XFF, 0XFF, 0XFF, 
0X57, 0XFF, 0XFC, 0X1F, 0XFF, 0X7F, 0XF5, 0XFF, 0XFF, 0XA3, 0XFF, 0XFF, 0XC3, 0XFF, 0XAF, 
0XFE, 0X8F, 0XFF, 0XF0, 0X7F, 0X3B, 0XFE, 0X3F, 0XFF, 0XFF, 0X83, 0XFF, 0XFF, 0X9F, 0XFF, 
0XFF, 0XD6, 0XFF, 0XFF, 0XF9, 0X7F, 0XFF, 0XFF, 0X79, 0XFF, 0XF8, 0X1F, 0XFF, 0XFF, 0X57, 
0XFF, 0XFF, 0X6B, 0XFF, 0XFA, 0XEF, 0XFC, 0X3F, 0XE1, 0XFF, 0XFF, 0XF6, 0X5F, 0XFF, 0XFF, 
0X7F, 0XFF, 0XF8, 0X2F, 0XFF, 0XEB, 0XFF, 0XF7, 0XFF, 0XE3, 0XFF, 0XFF, 0XC7, 0XFF, 0XBF, 
0XFE, 0X2F, 0XFF, 0XE1, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XD7, 0XFF, 0XFF, 0XFF, 0XF3, 
0XFF, 0XC4, 0XFF, 0XFF, 0X83, 0XFF, 0XFF, 0XEF, 0XFF, 0XFF, 0XF8, 0X7F, 0XFF, 0XFF, 0XFF, 
0XDF, 0XFF, 0XFF, 0XFF, 0XFE, 0X0F, 0XFF, 0XFF, 0XFF, 0XEF, 0XFF, 0XC1, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFE, 0X1F, 0XFF, 0XFA, 0XBF, 0XFF, 0XBF, 0XF1, 0XFF, 0XF3, 0XFF, 0XBD, 0X7F, 
0XFC, 0XE3, 0XFF, 0X5F, 0XFF, 0X2E, 0X7F, 0XDF, 0XFD, 0XCF, 0XFF, 0XAF, 0XEF, 0X77, 0X7F, 
0XFB, 0X9D, 0XFB, 0XDF, 0XF9, 0X6F, 0XBC, 0XFF, 0XF8, 0XF7, 0XFE, 0XE7, 0XFF, 0X7B, 0XFF, 
0X7B, 0XED, 0X7D, 0XFF, 0X39, 0XEF, 0XB5, 0XFF, 0XDC, 0XFF, 0XDF, 0XFB, 0XCB, 0X7F, 0XED, 
0XFF, 0XF7, 0XBF, 0XF2, 0X3F, 0XE7, 0XFF, 0XCD, 0XFF, 0XBD, 0XEF, 0XF3, 0XDF, 0XFE, 0X5A, 
0XF7, 0X39, 0XEB, 0X3F, 0XFF, 0XDE, 0XF7, 0X8F, 0XFE, 0X27, 0XFF, 0XF7, 0XAF, 0XFB, 0XDF, 
0XF7, 0XEF, 0XFE, 0XB5, 0XAC, 0X7B, 0XFC, 0XF7, 0XFB, 0XFD, 0XB7, 0X9E, 0XFF, 0X9A, 0XFF, 
0XFF, 0X6F, 0X77, 0XFF, 0XE3, 0X5F, 0XF7, 0XFD, 0XED, 0XFF, 0XDC, 0XF7, 0XBF, 0X7A, 0XF7, 
0XBD, 0XFF, 0X1B, 0XFF, 0XD6, 0XBF, 0XAF, 0X7F, 0XC3, 0X7F, 0X7F, 0XFD, 0XF7, 0XFF, 0XEC, 
0X7B, 0XDD, 0XE7, 0XBC, 0XCF, 0XFE, 0X1B, 0XFF, 0X7F, 0XEE, 0XBF, 0XFF, 0X9F, 0X7B, 0X4F, 
0XF5, 0XA7, 0XFF, 0XF6, 0X5F, 0XFB, 0XFF, 0XFD, 0XEF, 0XF8, 0XDF, 0XE7, 0X7F, 0XCE, 0X7F, 
0XFF, 0X27, 0XFF, 0XDE, 0X73, 0XCF, 0X7F, 0XE5, 0XBF, 0XF3, 0XFE, 0XC3, 0X5F, 0XF4, 0XFF, 
0XEC, 0XF7, 0XBE, 0XFF, 0XFF, 0X3D, 0XEF, 0XBD, 0XFE, 0XFB, 0XFF, 0XC3, 0X7F, 0XE6, 0XBD, 
0XBF, 0XDF, 0XF8, 0XDF, 0X7F, 0XFE, 0X6F, 0X7B, 0XFE, 0X35, 0XFF, 0XDE, 0X7F, 0XCF, 0XFF, 
0X87, 0XFF, 0XFF, 0XDB, 0X7D, 0XFF, 0X79, 0XFE, 0XFF, 0XFD, 0XFF, 0X7B, 0XFE, 0X35, 0XFF, 
0XDE, 0X5B, 0XCF, 0XFF, 0X87, 0XBF, 0XF7, 0XFF, 0XFB, 0XFF, 0XF1, 0XBF, 0XFE, 0XF3, 0XDF, 
0X7F, 0XFE, 0X3D, 0XFF, 0X9E, 0XFF, 0X9F, 0XFF, 0X2D, 0XFF, 0XF7, 0X9E, 0XFB, 0XFD, 0XA5, 
0XAF, 0XBC, 0XF6, 0XFB, 0XEF, 0XFF, 0X7F, 0XFF, 0X39, 0XFF, 0XBF, 0XFE, 0X5F, 0XF9, 0XDF, 
0XF7, 0X9F, 0XFF, 0XE3, 0XBF, 0XF7, 0X9D, 0XFB, 0XDF, 0XF8, 0XFF, 0XBD, 0XEF, 0XF0, 0XD7, 
0XFC, 0X9F, 0XEB, 0X79, 0XCF, 0XBF, 0XFF, 0X96, 0XFB, 0XDF, 0X73, 0X8C, 0XFF, 0XE1, 0XBF, 
0XF3, 0XBE, 0XE3, 0XFF, 0XED, 0XB7, 0X9C, 0XFF, 0X1A, 0X6F, 0XFF, 0X2D, 0XFF, 0XBD, 0XD7, 
0X5B, 0X7F, 0XC3, 0XFF, 0XEF, 0XFE, 0XCF, 0XFF, 0XF3, 0X7F, 0XFD, 0XFF, 0XD9, 0XEF, 0XFE, 
0X69, 0XFF, 0XF7, 0XCF, 0X3F, 0XFF, 0XD9, 0XFF, 0X9F, 0XFC, 0XF7, 0XBF, 0XEB, 0X3D, 0XFF, 
0XF7, 0X9E, 0XF7, 0XFF, 0X6F, 0XFB, 0XBF, 0XF7, 0X1F, 0XFF, 0XA5, 0XBE, 0XE7, 0X9C, 0XEB, 
0XFF, 0XFD, 0XB7, 0XFE, 0XF7, 0XDF, 0X7F, 0XFF, 0X16, 0XFF, 0X3F, 0XFB, 0XEF, 0XBF, 0XE7, 
0XFB, 0XFF, 0XFF, 0X79, 0XEF, 0XFA, 0X1F, 0XFE, 0X3B, 0XEC, 0X33, 0XFE, 0XCF, 0X79, 0XCF, 
0XF3, 0XAE, 0XFF, 0X33, 0XEF, 0XF3, 0X9E, 0XF5, 0XBF, 0XFC, 0X73, 0XFE, 0XFF, 0X9D, 0XBF, 
0XFB, 0X0E, 0XFF, 0XBF, 0XEF, 0XF7, 0X7F, 0XF1, 0X3F, 0XFD, 0XF7, 0X7C, 0XCF, 0XF0, 0X3F, 
0XF3, 0X3F, 0XCE, 0X3B, 0XFF, 0XC7, 0X7F, 0XFF, 0X3B, 0XFF, 0X7F, 0XF8, 0XDF, 0XFF, 0XFF, 
0XF3, 0X7F, 0XFE, 0X1B, 0XFF, 0XFF, 0X3F, 0XFE, 0XFF, 0XE7, 0X7F, 0XFF, 0XFF, 0XF1, 0XFF, 
0XF0, 0XFF, 0XFE, 0X7F, 0XFF, 0X77, 0XFF, 0X3F, 0X7F, 0XFE, 0X67, 0XCC, 0XFF, 0XA3, 0XFF, 
0XE3, 0X7D, 0XE7, 0X3F, 0XFC, 0XF7, 0XDE, 0XFF, 0X32, 0XEF, 0XF7, 0X3D, 0XFF, 0XB9, 0XEF, 
0X5B, 0XFF, 0XC7, 0X3F, 0XE7, 0XFB, 0X9F, 0XFF, 0X31, 0XEF, 0XFF, 0XFE, 0X76, 0XFF, 0XFF, 
0X33, 0XFF, 0XBB, 0X7E, 0XDF, 0XFF, 0X86, 0X7F, 0X77, 0XFF, 0XB3, 0XBF, 0X71, 0XDF, 0XFF, 
0XE1, 0XFF, 0X7F, 0XFF, 0X33, 0XF7, 0XDF, 0X3E, 0XEF, 0XFF, 0X87, 0X7F, 0XFB, 0X77, 0XBD, 
0XFF, 0X70, 0XDF, 0XFF, 0X79, 0XF7, 0X37, 0XFE, 0X3B, 0XF7, 0XCF, 0X3F, 0XEE, 0XFF, 0X87, 
0X7F, 0XFB, 0XB7, 0X3E, 0XFF, 0XF1, 0XFF, 0XDF, 0X30, 0XFF, 0XDB, 0XFF, 0X0F, 0XFB, 0XE6, 
0X5D, 0XDB, 0XFF, 0X1D, 0XFF, 0X70, 0XC7, 0XDF, 0X3D, 0XF9, 0XB3, 0XFF, 0X99, 0X7F, 0XCF, 
0XFC, 0X97, 0XFF, 0X99, 0XBF, 0X79, 0XFF, 0X1E, 0XFC, 0XFF, 0X63, 0XFF, 0X3B, 0XB3, 0X9F, 
0XFF, 0XC6, 0XFF, 0X8F, 0XFE, 0XF1, 0XFF, 0XB8, 0X7F, 0XFB, 0XF1, 0XDF, 0XFD, 0XFF, 0X9B, 
0XFF, 0XFF, 0XBF, 0X8F, 0X7F, 0XC1, 0XFF, 0X9F, 0X99, 0XF9, 0XFF, 0XF0, 0X7E, 0XFF, 0XF8, 
0XFF, 0X99, 0XFF, 0X0F, 0XFF, 0XE7, 0X6F, 0XE7, 0X7F, 0X89, 0XFF, 0X9D, 0XD9, 0X9D, 0XFF, 
0XF1, 0XFF, 0XF7, 0X98, 0XFF, 0XD9, 0XFD, 0X9F, 0XBF, 0XF3, 0X1F, 0XF7, 0XFF, 0X0E, 0XFF, 
0XDC, 0XE7, 0XCF, 0X3F, 0XF9, 0XF9, 0XFF, 0XCC, 0XFF, 0XEE, 0XFC, 0XF7, 0XFF, 0XF0, 0X3F, 
0XF9, 0XFF, 0X9D, 0XDF, 0XFE, 0X4F, 0XE7, 0X7F, 0XC7, 0X3F, 0XFD, 0X99, 0XFD, 0XDF, 0XFC, 
0XEC, 0XFF, 0XE0, 0XFF, 0XF3, 0XFF, 0X33, 0XFF, 0XCC, 0X1F, 0XDC, 0XFE, 0XDF, 0XEF, 0XFF, 
0X07, 0XFF, 0XFF, 0XC7, 0XC7, 0XFF, 0X03, 0XFF, 0X87, 0XFE, 0XFC, 0XFF, 0XF8, 0XFF, 0XFF, 
0XFE, 0X7E, 0X3F, 0XF0, 0X1F, 0XF8, 0X7F, 0XD7, 0XFF, 0XFF, 0X87, 0XFF, 0XFF, 0XC7, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 
0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF
};

#define BC_BIT_COUNT 23040
#define BC_BYTE_COUNT 2880
#define SPK_PIN 5

void setup(){
        pinMode(SPK_PIN, OUTPUT);
}

void loop(){
	unsigned char bite;
        int col; col = 0;
        int i;
        for(i=0;i<BC_BYTE_COUNT;i++){
	  bite = pgm_read_byte_near(onebitraw + i);
          /* let's break up our byte into it's constituent parts. */
          unsigned char mask = 1;
          unsigned char copy = bite;
          int z;
          for (z=0;z<8;z++) {
            digitalWrite(SPK_PIN, copy & mask);
            copy = copy >> 1;
            // An aproximation of 1000000 microseconds / 4410 samples.
            // I get to 4410 by taking the original samplerate of my
            // audio source, in sample.h and dividing it by 10. This
            // was so that I could reduce the size of the compiled
            // microcontroller binary.
            delayMicroseconds(227);
          }
        }
}

