/*

beverly-crusher (build 214) [http://electronoob.com]

Released under the terms of the MIT license.
Copyright (c) 2014 electronoob.
All rights reserved.

*/


#include <arduino.h>
#include <avr/pgmspace.h>
prog_uchar onebitraw[] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0xF8, 0x07, 0xE0, 
0x70, 0x0F, 0xFF, 0xF0, 0x0F, 0xC0, 0xC0, 0x3F, 0xFF, 0x80, 0x7E, 0x03, 0x00, 0xFF, 0xF8, 
0x07, 0x83, 0xC0, 0x7F, 0xFF, 0x03, 0xC1, 0xE0, 0x10, 0x7F, 0xE0, 0x78, 0x7C, 0x08, 0x1F, 
0xFE, 0x07, 0x07, 0xC0, 0x73, 0xFF, 0xF0, 0x18, 0x1E, 0x0F, 0xCF, 0xF3, 0x76, 0x00, 0x00, 
0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x08, 0xCC, 0xC8, 0x89, 0x33, 0x22, 0x46, 0x4C, 0x99, 0x06, 0x04, 
0x80, 0xFF, 0x49, 0xB3, 0x60, 0x09, 0x42, 0x58, 0x50, 0x4C, 0xB6, 0xFF, 0xF8, 0x00, 0x0F, 
0xFF, 0xF0, 0x30, 0x3C, 0x03, 0x3F, 0xF0, 0x38, 0x38, 0x00, 0xFF, 0xF8, 0x38, 0x7C, 0x60, 
0x67, 0xFE, 0x0E, 0x1E, 0x30, 0x33, 0xFF, 0x83, 0x81, 0xD8, 0x00, 0x7F, 0xF0, 0x30, 0x1F, 
0x00, 0x47, 0xFF, 0x03, 0x81, 0xF0, 0x1E, 0x7F, 0xE0, 0x38, 0x1F, 0x01, 0xFF, 0xFC, 0x07, 
0xC1, 0xF0, 0x1F, 0xFF, 0xC0, 0x7E, 0x0F, 0x80, 0x3F, 0xFF, 0x00, 0x7E, 0x00, 0x00, 0x7F, 
0xFE, 0x01, 0xFC, 0x02, 0x00, 0xFF, 0xFC, 0x01, 0xF8, 0x06, 0x00, 0xFF, 0xFC, 0x03, 0xF8, 
0x0E, 0x01, 0xFF, 0xFC, 0x03, 0xF8, 0x06, 0x00, 0xFF, 0xFC, 0x03, 0xFC, 0x03, 0x00, 0xFF, 
0xFE, 0x01, 0xFF, 0x01, 0xC0, 0x3F, 0xFC, 0x19, 0x87, 0xE1, 0x80, 0x7F, 0xFC, 0x24, 0x23, 
0x83, 0x01, 0x7F, 0xF8, 0x41, 0x8F, 0x12, 0x00, 0xFF, 0xF1, 0x26, 0x1D, 0x32, 0x01, 0xFF, 
0xF0, 0xCB, 0x3C, 0xB2, 0x03, 0xFF, 0xE1, 0x0C, 0x3C, 0xA0, 0x07, 0xFF, 0xC3, 0x0E, 0x1C, 
0xF0, 0x03, 0xFF, 0xC2, 0x86, 0x9E, 0x08, 0x1B, 0xFF, 0x81, 0x83, 0x4F, 0x00, 0x1F, 0xFF, 
0x03, 0x03, 0xC3, 0x00, 0x0F, 0xFE, 0x03, 0x07, 0xC0, 0x00, 0xFF, 0xFC, 0x07, 0x83, 0xF0, 
0x0F, 0xFF, 0xFE, 0x01, 0xE0, 0x7C, 0x07, 0xFF, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x3F, 0xFF, 
0xF8, 0x00, 0x7F, 0xC0, 0x01, 0xFF, 0xFF, 0xC0, 0x03, 0xFE, 0x00, 0x00, 0x3F, 0xF8, 0x07, 
0x00, 0x0F, 0xF0, 0x00, 0xFE, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFE, 0x00, 0x3F, 
0x80, 0x1F, 0xFF, 0xFE, 0x01, 0xE3, 0xFC, 0x07, 0x9F, 0xFF, 0x01, 0xE0, 0x7C, 0x0F, 0x8F, 
0xFC, 0x07, 0x83, 0xF0, 0x18, 0x7F, 0xFC, 0x0E, 0x07, 0xC3, 0xC0, 0xEF, 0xFC, 0x0E, 0x0F, 
0x8F, 0x83, 0x87, 0xFE, 0x06, 0x07, 0xC3, 0x81, 0x87, 0xFF, 0xC1, 0x83, 0xE1, 0xE1, 0xA3, 
0xFF, 0xF0, 0x60, 0xF8, 0x70, 0x40, 0x37, 0xFE, 0x06, 0x0F, 0x0E, 0x08, 0x0D, 0xFF, 0xE0, 
0xC1, 0xE1, 0xC3, 0x01, 0x8F, 0xFE, 0x0C, 0x1E, 0x1C, 0x78, 0x30, 0xFF, 0xE0, 0xC3, 0xC3, 
0xC7, 0x06, 0x1F, 0xFE, 0x0C, 0x3C, 0x3C, 0x78, 0x60, 0xFF, 0xC1, 0xC1, 0x83, 0xC3, 0x87, 
0x07, 0xFC, 0x3C, 0x1E, 0x1E, 0x3C, 0x0C, 0x1F, 0xF8, 0x1C, 0x0F, 0x87, 0xC0, 0x60, 0x10, 
0x00, 0x61, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x05, 0xE2, 0xC9, 0x30, 0x00, 0x4A, 0x91, 0x5C, 0xA4, 0x27, 0x05, 0xA5, 0x0A, 
0x89, 0xCB, 0xDA, 0x40, 0x99, 0x4D, 0x21, 0x3E, 0x8E, 0x34, 0x23, 0x34, 0xCF, 0xEA, 0xE1, 
0x77, 0xB8, 0x58, 0x91, 0x94, 0x94, 0xA5, 0x65, 0xBA, 0x96, 0xB4, 0xBA, 0x53, 0x88, 0x0B, 
0x29, 0x22, 0x84, 0x88, 0x3A, 0x0B, 0x4A, 0xE4, 0xC9, 0x55, 0x6D, 0x35, 0x26, 0x12, 0x07, 
0x29, 0x40, 0x84, 0x20, 0x00, 0x02, 0x00, 0x97, 0xFE, 0x00, 0x7C, 0x00, 0xFD, 0xFC, 0x01, 
0xF8, 0x03, 0x00, 0xFF, 0xF8, 0x03, 0xF8, 0x00, 0x03, 0xFF, 0xC0, 0x1F, 0xC0, 0x3C, 0x07, 
0xFF, 0xC0, 0x1F, 0x80, 0x78, 0x07, 0xFF, 0xC0, 0x0F, 0xC0, 0x7C, 0x01, 0xFF, 0xF8, 0x03, 
0xF0, 0x1F, 0x00, 0xFF, 0xFC, 0x01, 0xF8, 0x0F, 0xC0, 0x3F, 0xFF, 0x80, 0x7F, 0x01, 0xF0, 
0x0F, 0xFF, 0xE0, 0x0F, 0xC0, 0x7C, 0x03, 0xFF, 0xFC, 0x01, 0xF8, 0x1F, 0x80, 0x3F, 0xFF, 
0xC0, 0x0F, 0xF0, 0x07, 0x00, 0x7F, 0xFF, 0xC0, 0x0F, 0xF0, 0x00, 0x03, 0xFF, 0xFE, 0x00, 
0xFF, 0x00, 0x00, 0x1F, 0xFF, 0xE0, 0x0F, 0xF0, 0x15, 0x01, 0xFF, 0xFE, 0x00, 0xFE, 0x01, 
0x80, 0x0F, 0xFF, 0xE0, 0x07, 0xF0, 0x0C, 0x00, 0xFF, 0xFF, 0x00, 0x3F, 0x80, 0x20, 0x0F, 
0xFF, 0xF8, 0x03, 0xF8, 0x0F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0x80, 0xF0, 0x03, 0xFF, 0xF8, 
0x03, 0xFC, 0x07, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0x80, 0xF0, 0x07, 0xFF, 0xF0, 0x0F, 0x83, 
0xC0, 0xC0, 0x7F, 0xFF, 0x00, 0x11, 0xF1, 0xD8, 0x11, 0xBF, 0xFE, 0x04, 0x67, 0xC7, 0xCC, 
0x00, 0xFF, 0xFE, 0x24, 0x61, 0xC3, 0xBA, 0x00, 0x7F, 0xFF, 0x82, 0x20, 0xC1, 0x3E, 0x00, 
0x1F, 0xFF, 0x80, 0x30, 0xF3, 0x0C, 0x00, 0x1F, 0xFF, 0x84, 0x30, 0xC3, 0x1C, 0x00, 0x1F, 
0xFF, 0xC2, 0x1C, 0x70, 0xEF, 0x02, 0x0D, 0xFF, 0xE0, 0x00, 0x0F, 0x0F, 0x00, 0x1F, 0xFF, 
0xC0, 0x81, 0xE1, 0xC0, 0x01, 0xFF, 0xFC, 0x07, 0x07, 0xC3, 0x80, 0x3F, 0xFF, 0xE0, 0x20, 
0x3E, 0x00, 0x07, 0xFF, 0xFA, 0x00, 0x20, 0x00, 0x7D, 0xFC, 0xD5, 0x10, 0x30, 0x6B, 0x18, 
0x30, 0xB4, 0x2B, 0x45, 0x89, 0x99, 0xB2, 0x88, 0x86, 0x38, 0x2C, 0x80, 0x51, 0x90, 0x93, 
0x94, 0x24, 0xAB, 0x25, 0x3B, 0x22, 0x2B, 0xC0, 0x99, 0x6B, 0x6D, 0x25, 0x95, 0x72, 0xE9, 
0x26, 0xB0, 0x4D, 0xFD, 0xE9, 0x18, 0x55, 0x10, 0x94, 0xA9, 0x65, 0x2C, 0x41, 0x62, 0xD2, 
0x50, 0x4A, 0x0A, 0x20, 0x40, 0x10, 0x40, 0x10, 0x12, 0x80, 0x00, 0x07, 0xFF, 0xF8, 0x0F, 
0x81, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0x03, 0xF0, 0x00, 0x7F, 0xFE, 0x01, 0xF0, 0x7F, 0x00, 
0x03, 0xFF, 0xF0, 0x1F, 0x03, 0xF8, 0x00, 0x3F, 0xFF, 0xC0, 0x7C, 0x07, 0xE0, 0x00, 0x3F, 
0xFF, 0x40, 0x7C, 0x03, 0xE0, 0x00, 0xFF, 0xFE, 0x00, 0xFC, 0x0F, 0xE0, 0x00, 0xFF, 0xFF, 
0x80, 0xFE, 0x07, 0xF0, 0x00, 0x7F, 0xFF, 0x80, 0x3F, 0x03, 0xF8, 0x00, 0x5F, 0xFF, 0xE0, 
0x07, 0xC0, 0x7E, 0x00, 0x1F, 0xFF, 0xF8, 0x01, 0xF0, 0x1F, 0x80, 0x03, 0xFF, 0xFE, 0x00, 
0xF8, 0x0F, 0x80, 0x01, 0xFF, 0xFF, 0xC0, 0x0F, 0x03, 0xF0, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 
0x18, 0x0E, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x02, 0xFE, 0x5D, 0x00, 
0x80, 0x00, 0x00, 0x0F, 0xF7, 0xF4, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xD7, 0x80, 0x00, 
0x00, 0x00, 0x04, 0x07, 0xFA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xA0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x86, 0x31, 0xCE, 
0xDF, 0xF8, 0x43, 0x1C, 0xE3, 0x00, 0xFF, 0xFD, 0xE5, 0x08, 0x63, 0x10, 0x1F, 0xFF, 0xF9, 
0x4A, 0x5B, 0xDE, 0x02, 0xFF, 0xFC, 0x02, 0x8C, 0xE6, 0x00, 0x3F, 0xFF, 0x80, 0xA1, 0xBC, 
0xE0, 0x0B, 0xFF, 0xF8, 0x87, 0x39, 0xCF, 0x00, 0x2F, 0xFF, 0xE4, 0x29, 0x6D, 0x38, 0x00, 
0x3F, 0xFF, 0xC0, 0x21, 0x5A, 0x5E, 0x00, 0x47, 0xFF, 0xF9, 0x08, 0x52, 0x97, 0x88, 0x00, 
0xFF, 0xFF, 0x80, 0x02, 0xB0, 0xFC, 0x00, 0x13, 0xFF, 0xFE, 0x42, 0x05, 0x85, 0xE0, 0x00, 
0x2F, 0xFF, 0xFD, 0x81, 0x03, 0x63, 0x60, 0x84, 0x0F, 0x7F, 0xFF, 0xC0, 0x81, 0xB9, 0x68, 
0x00, 0x3F, 0xFF, 0x7F, 0x80, 0x21, 0x58, 0x60, 0x01, 0xFF, 0xFF, 0xFC, 0x00, 0x0F, 0x83, 
0x80, 0x00, 0xFF, 0xFF, 0xFC, 0x00, 0x07, 0xC1, 0xE0, 0x00, 0xFF, 0xFF, 0xF8, 0x01, 0x03, 
0xC0, 0x60, 0x07, 0xFF, 0xFF, 0xF0, 0x03, 0x01, 0xE0, 0x00, 0x01, 0xFF, 0xFF, 0xF8, 0x01, 
0xF0, 0x3E, 0x00, 0x03, 0xFF, 0xFF, 0xF0, 0x03, 0xE0, 0xFE, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 
0x0F, 0xC0, 0xF8, 0x00, 0x01, 0xFF, 0xFF, 0xF8, 0x03, 0xF0, 0x1C, 0x00, 0x03, 0xFF, 0xFF, 
0xC0, 0x07, 0xE0, 0x3C, 0x00, 0x1F, 0xFF, 0xFF, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x6E, 0x00, 0xBA, 0x69, 0x9A, 0x47, 0x36, 0x8B, 0x58, 0xD9, 0x6A, 0x2A, 0x2B, 
0x1A, 0xCB, 0x57, 0xDC, 0x42, 0xEC, 0xA4, 0xEF, 0x7D, 0x85, 0x6D, 0xCB, 0x13, 0x58, 0x10, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0A, 
0x08, 0x5B, 0xA8, 0x92, 0x58, 0x6A, 0x4B, 0x4B, 0x40, 0x1A, 0x1F, 0x00, 0x00, 0xFF, 0xF8, 
0x0F, 0x01, 0xF0, 0x38, 0x07, 0xFF, 0xF8, 0x0F, 0x03, 0xE0, 0xF8, 0x00, 0x3F, 0xFF, 0xC0, 
0x78, 0x1F, 0x07, 0xC0, 0x01, 0xFF, 0xFF, 0xE0, 0x04, 0x0F, 0x00, 0xA0, 0x0B, 0xC9, 0xDD, 
0xCD, 0x48, 0x9A, 0x68, 0x7F, 0xB9, 0x49, 0x68, 0xDC, 0x88, 0x82, 0xAA, 0xD1, 0x29, 0x7A, 
0xEE, 0x8E, 0x25, 0x5D, 0xAD, 0x03, 0x07, 0xA5, 0x2C, 0x0C, 0xAD, 0x4F, 0x24, 0x82, 0x94, 
0xFE, 0x55, 0x50, 0x8F, 0x47, 0x42, 0x18, 0x6A, 0xB9, 0x56, 0xB4, 0x14, 0x33, 0xE9, 0x30, 
0x33, 0x2B, 0x8F, 0xB8, 0x54, 0x69, 0xE0, 0x64, 0xAA, 0x61, 0x50, 0x55, 0x8E, 0xE1, 0x1A, 
0x8D, 0xAC, 0xF2, 0x8F, 0x49, 0x2D, 0x6D, 0x19, 0x1E, 0xF8, 0x33, 0x29, 0xB9, 0x35, 0x3D, 
0xF4, 0xA4, 0xCD, 0xAB, 0x06, 0x50, 0x98, 0xD7, 0x9A, 0xE1, 0x12, 0x8E, 0xB8, 0x84, 0xD8, 
0xD1, 0x20, 0xE1, 0x42, 0x02, 0x84, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
0xDB, 0x00, 0x03, 0xFF, 0xF8, 0x3E, 0x1F, 0x03, 0xCF, 0xFF, 0x00, 0x81, 0xE0, 0x80, 0x47, 
0xFF, 0xC0, 0xC0, 0xF1, 0xE0, 0x61, 0xFF, 0xC0, 0x40, 0xE1, 0xE0, 0x01, 0xFF, 0xFC, 0x00, 
0x1E, 0x3C, 0x3C, 0x09, 0x7F, 0xFE, 0x05, 0x0E, 0x1E, 0x3C, 0x40, 0x97, 0xFF, 0xF0, 0x61, 
0xE3, 0xC7, 0x87, 0x02, 0x1F, 0xFF, 0xF0, 0x40, 0xE1, 0xC7, 0x87, 0x0E, 0x1F, 0xFF, 0xF0, 
0x40, 0xC3, 0xC7, 0x06, 0x0C, 0x18, 0xF7, 0xFF, 0xE1, 0x43, 0x87, 0x0E, 0x1C, 0x30, 0xE3, 
0xDF, 0xFF, 0xF0, 0x00, 0xC3, 0x87, 0x0C, 0x21, 0xFF, 0xFF, 0xF8, 0x30, 0xE1, 0xC3, 0x8E, 
0x00, 0x0F, 0xDF, 0xFF, 0xF0, 0x00, 0xC3, 0x87, 0x18, 0x30, 0xFB, 0xF7, 0xD7, 0x04, 0x1C, 
0x78, 0xE1, 0xC2, 0x8F, 0x7F, 0xFF, 0xF0, 0xE1, 0x87, 0x0C, 0x38, 0x70, 0x43, 0xAF, 0x79, 
0xEB, 0x86, 0x0C, 0x38, 0xE1, 0xC3, 0x87, 0x1E, 0x7C, 0xF1, 0xEF, 0x1C, 0x38, 0xE1, 0xC7, 
0x04, 0x30, 0x41, 0x06, 0xBF, 0x63, 0xCE, 0x3F, 0xF0, 0xA1, 0x0E, 0x1C, 0x70, 0x81, 0x02, 
0x08, 0x44, 0x92, 0xC9, 0x6E, 0xD6, 0x7A, 0x87, 0xFC, 0x30, 0xC3, 0x0E, 0x10, 0x40, 0x82, 
0x00, 0x7F, 0xFE, 0x3F, 0xE1, 0x06, 0x1C, 0x50, 0x81, 0x00, 0x00, 0x00, 0x04, 0x10, 0x00, 
0x2F, 0xDD, 0x7C, 0x71, 0xF8, 0x00, 0x02, 0x04, 0x10, 0x20, 0xC0, 0x00, 0x5F, 0xF9, 0xD4, 
0x38, 0x73, 0xAC, 0x40, 0x00, 0x11, 0xFF, 0xFD, 0xCE, 0x10, 0x42, 0x15, 0x08, 0x00, 0x02, 
0x00, 0x40, 0x00, 0x54, 0x37, 0x00, 0x01, 0x50, 0x28, 0x00, 0x46, 0x00, 0x14, 0x0A, 0x80, 
0x02, 0xA0, 0x02, 0x21, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00
};

#define BC_BIT_COUNT 15616
#define BC_BYTE_COUNT 1952
#define SPK_PIN 5

void setup(){ pinMode(SPK_PIN, OUTPUT); }

void loop(){
        unsigned char bite; int col; col = 0; int i;
        for(i=0;i<BC_BYTE_COUNT;i++){
          bite = pgm_read_byte_near(onebitraw + i);
          unsigned char mask = 1; unsigned char copy = bite; int z;
          for (z=0;z<8;z++) {
            digitalWrite(SPK_PIN, copy & mask);
            copy = copy >> 1;
            delayMicroseconds(264);
          }
        }
}
